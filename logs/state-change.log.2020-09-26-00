[2020-09-26 01:12:15,874] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 34 from controller 1 for 2 partitions (state.change.logger)
[2020-09-26 01:12:15,877] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 34 from controller 1 epoch 3 as part of the become-leader transition for 2 partitions (state.change.logger)
[2020-09-26 01:12:15,878] INFO [Broker id=2] Leader test-topic-0 starts at leader epoch 3 from offset 1 with high watermark 1 ISR [2,3] addingReplicas [] removingReplicas []. Previous leader epoch was 2. (state.change.logger)
[2020-09-26 01:12:15,889] INFO [Broker id=2] Leader test-topic-2 starts at leader epoch 3 from offset 0 with high watermark 0 ISR [2,3] addingReplicas [] removingReplicas []. Previous leader epoch was 2. (state.change.logger)
[2020-09-26 01:12:15,930] INFO [Broker id=2] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 35 (state.change.logger)
[2020-09-26 01:12:15,937] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 36 from controller 1 for 1 partitions (state.change.logger)
[2020-09-26 01:12:15,937] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 36 from controller 1 epoch 3 as part of the become-leader transition for 1 partitions (state.change.logger)
[2020-09-26 01:12:15,938] INFO [Broker id=2] Leader test-topic-1 starts at leader epoch 3 from offset 0 with high watermark 0 ISR [2,3] addingReplicas [] removingReplicas []. Previous leader epoch was 2. (state.change.logger)
[2020-09-26 01:12:15,940] INFO [Broker id=2] Skipped the become-leader state change after marking its partition as leader with correlation id 36 from controller 1 epoch 3 for partition test-topic-1 (last update controller epoch 3) since it is already the leader for the partition. (state.change.logger)
[2020-09-26 01:12:15,941] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 37 (state.change.logger)
[2020-09-26 01:12:17,106] INFO [Controller id=2 epoch=4] Sending UpdateMetadata request to brokers HashSet(2, 3) for 0 partitions (state.change.logger)
[2020-09-26 01:12:17,136] INFO [Controller id=2 epoch=4] Sending LeaderAndIsr request to broker 2 with 28 become-leader and 0 become-follower partitions (state.change.logger)
[2020-09-26 01:12:17,137] INFO [Controller id=2 epoch=4] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 3 become-follower partitions (state.change.logger)
[2020-09-26 01:12:17,138] INFO [Controller id=2 epoch=4] Sending UpdateMetadata request to brokers HashSet(2, 3) for 28 partitions (state.change.logger)
[2020-09-26 01:12:17,141] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 2 for 28 partitions (state.change.logger)
[2020-09-26 01:12:17,141] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition test-topic-2 since its associated leader epoch 3 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,141] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition test-topic-0 since its associated leader epoch 3 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,141] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition test-topic-1 since its associated leader epoch 3 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,141] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-15 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,141] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-13 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,141] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-11 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,141] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-9 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,141] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-23 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,141] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-21 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-19 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-17 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-7 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-5 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-3 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-1 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-47 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-45 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-43 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-41 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-49 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-31 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-29 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-27 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-25 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-39 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-37 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-35 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,142] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 4 for partition __consumer_offsets-33 since its associated leader epoch 5 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,145] INFO [Broker id=2] Add 28 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 4 with correlation id 2 (state.change.logger)
[2020-09-26 01:12:17,175] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-22 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,175] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,175] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-46 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,175] INFO [Controller id=2 epoch=4] Partition test-topic-2 state changed to (Leader:2,ISR:2,3,LeaderEpoch:3,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,176] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,176] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,176] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,176] INFO [Controller id=2 epoch=4] Partition test-topic-0 state changed to (Leader:2,ISR:2,3,LeaderEpoch:3,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,176] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,176] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,176] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-34 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,176] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,176] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-4 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,176] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-16 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,176] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-28 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,176] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,176] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,176] INFO [Controller id=2 epoch=4] Partition test-topic-1 state changed to (Leader:2,ISR:2,3,LeaderEpoch:3,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,176] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,177] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,177] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,177] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,177] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,177] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,177] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,177] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-10 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,177] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,177] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-40 state changed to (Leader:-1,ISR:1,LeaderEpoch:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2020-09-26 01:12:17,178] INFO [Controller id=2 epoch=4] Sending LeaderAndIsr request to broker 2 with 3 become-leader and 0 become-follower partitions (state.change.logger)
[2020-09-26 01:12:17,178] INFO [Controller id=2 epoch=4] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 3 become-follower partitions (state.change.logger)
[2020-09-26 01:12:17,179] INFO [Controller id=2 epoch=4] Sending UpdateMetadata request to brokers HashSet(2, 3) for 28 partitions (state.change.logger)
[2020-09-26 01:12:17,181] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 2 for 3 partitions (state.change.logger)
[2020-09-26 01:12:17,181] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 4 for partition test-topic-2 since its associated leader epoch 3 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,181] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 4 for partition test-topic-0 since its associated leader epoch 3 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,181] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 4 for partition test-topic-1 since its associated leader epoch 3 matches the current leader epoch (state.change.logger)
[2020-09-26 01:12:17,184] INFO [Broker id=2] Add 28 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 4 with correlation id 4 (state.change.logger)
[2020-09-26 01:12:17,206] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,206] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,206] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,207] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,207] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,207] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,207] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,208] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,208] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,208] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,208] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,209] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,209] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,209] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,209] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,210] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,210] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,210] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,210] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,210] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,211] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,212] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,212] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,212] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,212] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:430)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:553)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:551)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:920)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:427)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:338)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:237)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:157)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:73)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:58)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:41)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:245)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1355)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:1806)
	at kafka.controller.KafkaController.process(KafkaController.scala:1851)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:51)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:127)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:130)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:130)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-09-26 01:12:17,213] INFO [Controller id=2 epoch=4] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
