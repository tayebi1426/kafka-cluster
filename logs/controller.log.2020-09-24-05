[2020-09-24 05:19:08,664] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@44e81672, name=log4j:logger=kafka.controller (kafka.controller)
[2020-09-24 05:31:14,744] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@44e81672, name=log4j:logger=kafka.controller (kafka.controller)
[2020-09-24 05:33:16,475] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-24 05:33:16,516] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-09-24 05:33:16,516] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2020-09-24 05:33:16,520] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-09-24 05:33:16,524] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-09-24 05:33:16,527] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2020-09-24 05:33:16,560] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 24) (kafka.controller.KafkaController)
[2020-09-24 05:33:16,564] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2020-09-24 05:33:16,570] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-09-24 05:33:16,587] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-09-24 05:33:16,589] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2020-09-24 05:33:16,590] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-09-24 05:33:16,590] INFO [Controller id=1] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2020-09-24 05:33:16,591] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-09-24 05:33:16,594] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-09-24 05:33:16,595] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-09-24 05:33:16,595] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-09-24 05:33:16,596] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2020-09-24 05:33:16,596] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2020-09-24 05:33:16,606] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-09-24 05:33:16,607] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-09-24 05:33:16,610] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-09-24 05:33:16,611] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2020-09-24 05:33:16,611] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-09-24 05:33:16,612] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-09-24 05:33:16,617] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2020-09-24 05:33:16,618] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-09-24 05:33:16,630] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-09-24 05:33:16,630] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-09-24 05:33:16,630] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-09-24 05:33:16,631] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-09-24 05:33:16,631] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-09-24 05:33:16,632] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9192 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-09-24 05:33:16,647] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-09-24 05:33:21,649] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-24 05:33:21,649] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-24 05:38:21,652] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-24 05:38:21,652] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-24 05:43:21,653] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-24 05:43:21,653] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-24 05:48:21,654] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-24 05:48:21,654] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-24 05:53:17,070] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2020-09-24 05:53:17,071] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-09-24 05:53:17,086] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2020-09-24 05:53:17,088] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-09-24 05:53:17,093] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2020-09-24 05:53:17,095] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9292 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-09-24 05:53:17,096] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 24, 2 -> 58) (kafka.controller.KafkaController)
[2020-09-24 05:53:17,095] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9192 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-09-24 05:53:17,125] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-09-24 05:53:17,139] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-09-24 05:53:21,654] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-24 05:53:21,655] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-09-24 05:58:21,655] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-09-24 05:58:21,656] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
